{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jesse\\\\Documents\\\\Frontend opleiding\\\\Code\\\\React\\\\inventory-app\\\\src\\\\Inventory.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ProductItem from \"./components/Product\";\nimport \"./inventory.css\";\nimport \"./reset.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Inventory = () => {\n  _s();\n\n  const [products, setProducts] = useState([]);\n  const [inputValue, setInputValue] = useState({\n    id: \"\",\n    value: \"\"\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"dfwg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        type: \"text\",\n        name: \"product-input\",\n        value: inputValue.value,\n        onChange: e => setInputValue({\n          value: e.target.value,\n          id: inputValue.id\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"add\",\n        onClick: () => {\n          if (inputValue.id) {\n            const NewProducts = products.map(product => {\n              if (product.id === inputValue.id) {\n                return {\n                  id: product.id,\n                  value: inputValue.value\n                };\n              }\n\n              return product;\n            });\n            setInputValue({\n              id: \"\",\n              value: \"\"\n            });\n            return setProducts(NewProducts);\n          }\n\n          const id = nanoid();\n          const myProducts = [...products, {\n            id: id,\n            value: inputValue.value\n          }];\n          setInputValue({\n            id: \"\",\n            value: \"\"\n          });\n          setProducts(myProducts);\n        },\n        children: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: products.map(product => {\n          return /*#__PURE__*/_jsxDEV(ProductItem, {\n            product: product,\n            setProducts: setProducts,\n            products: products,\n            setInputValue: setInputValue\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Inventory, \"u0EaV5Un8FJBXFB7RCeEiEmdQXY=\");\n\n_c = Inventory;\nexport default Inventory;\n\nvar _c;\n\n$RefreshReg$(_c, \"Inventory\");","map":{"version":3,"sources":["C:/Users/jesse/Documents/Frontend opleiding/Code/React/inventory-app/src/Inventory.js"],"names":["React","useState","nanoid","ProductItem","Inventory","products","setProducts","inputValue","setInputValue","id","value","e","target","NewProducts","map","product","myProducts"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,OAAO,iBAAP;AACA,OAAO,aAAP;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACM,UAAD,EAAaC,aAAb,IAA8BP,QAAQ,CAAC;AAAEQ,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,KAAK,EAAE;AAAjB,GAAD,CAA5C;AAEA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,IAAI,EAAC,eAHP;AAIE,QAAA,KAAK,EAAEH,UAAU,CAACG,KAJpB;AAKE,QAAA,QAAQ,EAAGC,CAAD,IACRH,aAAa,CAAC;AAAEE,UAAAA,KAAK,EAAEC,CAAC,CAACC,MAAF,CAASF,KAAlB;AAAyBD,UAAAA,EAAE,EAAEF,UAAU,CAACE;AAAxC,SAAD;AANjB;AAAA;AAAA;AAAA;AAAA,cADF,eAUE;AACE,QAAA,SAAS,EAAC,KADZ;AAEE,QAAA,OAAO,EAAE,MAAM;AACb,cAAIF,UAAU,CAACE,EAAf,EAAmB;AACjB,kBAAMI,WAAW,GAAGR,QAAQ,CAACS,GAAT,CAAcC,OAAD,IAAa;AAC5C,kBAAIA,OAAO,CAACN,EAAR,KAAeF,UAAU,CAACE,EAA9B,EAAkC;AAChC,uBAAO;AAAEA,kBAAAA,EAAE,EAAEM,OAAO,CAACN,EAAd;AAAkBC,kBAAAA,KAAK,EAAEH,UAAU,CAACG;AAApC,iBAAP;AACD;;AACD,qBAAOK,OAAP;AACD,aALmB,CAApB;AAMAP,YAAAA,aAAa,CAAC;AAAEC,cAAAA,EAAE,EAAE,EAAN;AAAUC,cAAAA,KAAK,EAAE;AAAjB,aAAD,CAAb;AACA,mBAAOJ,WAAW,CAACO,WAAD,CAAlB;AACD;;AACD,gBAAMJ,EAAE,GAAGP,MAAM,EAAjB;AACA,gBAAMc,UAAU,GAAG,CACjB,GAAGX,QADc,EAEjB;AAAEI,YAAAA,EAAE,EAAEA,EAAN;AAAUC,YAAAA,KAAK,EAAEH,UAAU,CAACG;AAA5B,WAFiB,CAAnB;AAIAF,UAAAA,aAAa,CAAC;AAAEC,YAAAA,EAAE,EAAE,EAAN;AAAUC,YAAAA,KAAK,EAAE;AAAjB,WAAD,CAAb;AACAJ,UAAAA,WAAW,CAACU,UAAD,CAAX;AACD,SApBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,eAkCE;AAAA,kBACGX,QAAQ,CAACS,GAAT,CAAcC,OAAD,IAAa;AACzB,8BACE,QAAC,WAAD;AAEE,YAAA,OAAO,EAAEA,OAFX;AAGE,YAAA,WAAW,EAAET,WAHf;AAIE,YAAA,QAAQ,EAAED,QAJZ;AAKE,YAAA,aAAa,EAAEG;AALjB,aACOO,OAAO,CAACN,EADf;AAAA;AAAA;AAAA;AAAA,kBADF;AASD,SAVA;AADH;AAAA;AAAA;AAAA;AAAA,cAlCF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqDD,CAzDD;;GAAML,S;;KAAAA,S;AA2DN,eAAeA,SAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport ProductItem from \"./components/Product\";\nimport \"./inventory.css\";\nimport \"./reset.css\";\n\nconst Inventory = () => {\n  const [products, setProducts] = useState([]);\n  const [inputValue, setInputValue] = useState({ id: \"\", value: \"\" });\n\n  return (\n    <div>\n      <h1>dfwg</h1>\n      <div className=\"container\">\n        <input\n          className=\"input\"\n          type=\"text\"\n          name=\"product-input\"\n          value={inputValue.value}\n          onChange={(e) =>\n            setInputValue({ value: e.target.value, id: inputValue.id })\n          }\n        />\n        <button\n          className=\"add\"\n          onClick={() => {\n            if (inputValue.id) {\n              const NewProducts = products.map((product) => {\n                if (product.id === inputValue.id) {\n                  return { id: product.id, value: inputValue.value };\n                }\n                return product;\n              });\n              setInputValue({ id: \"\", value: \"\" });\n              return setProducts(NewProducts);\n            }\n            const id = nanoid();\n            const myProducts = [\n              ...products,\n              { id: id, value: inputValue.value },\n            ];\n            setInputValue({ id: \"\", value: \"\" });\n            setProducts(myProducts);\n          }}\n        >\n          Add\n        </button>\n        <ul>\n          {products.map((product) => {\n            return (\n              <ProductItem\n                key={product.id}\n                product={product}\n                setProducts={setProducts}\n                products={products}\n                setInputValue={setInputValue}\n              />\n            );\n          })}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default Inventory;\n"]},"metadata":{},"sourceType":"module"}